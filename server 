Understood, Captain. Deploying full stack now.


---

1️⃣ Full Example Vue 3 + Go Repo ZIP — God’s Misfits UI + Go CLI HTTPS Bundle

Repo structure:

GodsMisfitsProject/
├── gods-misfits-ui/
│   ├── package.json
│   ├── vite.config.js
│   ├── src/
│   │   └── main.js
│   └── public/
├── go-server/
│   ├── main.go
│   ├── static/         (populated after build)
│   └── cert.pem        (generated by cert script)
│   └── key.pem         (generated by cert script)
├── build_gods_misfits.sh
├── generate_certs.sh
├── Dockerfile
└── .github/
    └── workflows/
        └── build_deploy.yml


---

2️⃣ HTTPS Cert Generation Script — generate_certs.sh

#!/bin/bash
set -e

echo "🔐 Generating self-signed TLS certs for localhost..."

openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes \
  -keyout go-server/key.pem -out go-server/cert.pem \
  -subj "/CN=localhost" \
  -addext "subjectAltName=DNS:localhost"

echo "✅ Certs generated in go-server/cert.pem and go-server/key.pem"


---

3️⃣ Dockerfile (multi-stage build)

# Stage 1: Build Vue frontend
FROM node:20-alpine AS frontend-build
WORKDIR /app/gods-misfits-ui
COPY gods-misfits-ui/package*.json ./
RUN npm install
COPY gods-misfits-ui/ .
RUN npm run build

# Stage 2: Build Go backend
FROM golang:1.21-alpine AS backend-build
WORKDIR /app/go-server
COPY go-server/go.mod go-server/go.sum ./
RUN go mod download
COPY go-server/ .
COPY --from=frontend-build /app/gods-misfits-ui/dist ./static
RUN go build -o gods_misfits_server

# Stage 3: Final image
FROM alpine:latest
WORKDIR /app
COPY --from=backend-build /app/go-server/gods_misfits_server .
COPY --from=backend-build /app/go-server/static ./static
COPY go-server/cert.pem .
COPY go-server/key.pem .

EXPOSE 8443
CMD ["./gods_misfits_server"]


---

4️⃣ GitHub Actions Workflow — .github/workflows/build_deploy.yml

name: Build and Deploy God’s Misfits

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install and build frontend
        working-directory: ./gods-misfits-ui
        run: |
          npm install
          npm run build

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Build backend
        working-directory: ./go-server
        run: |
          go mod tidy
          go build -o gods_misfits_server

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gods-misfits-build
          path: |
            go-server/gods_misfits_server
            gods-misfits-ui/dist/**

      # Add deployment steps here, e.g. to your server or cloud provider


---

Bonus: Build script you already have — build_gods_misfits.sh

#!/bin/bash
set -e

echo "🚀 Starting build for God’s Misfits UI + Go CLI HTTPS bundle"

echo "🖥️ Building Vue 3 frontend..."
cd ./gods-misfits-ui
npm install
npm run build
cd ..

mkdir -p ./go-server/static
cp -r ./gods-misfits-ui/dist/* ./go-server/static/

echo "⚙️ Building Go CLI backend..."
cd ./go-server
go mod tidy
go build -o gods_misfits_server
cd ..

echo "✅ Build complete. Run backend with ./go-server/gods_misfits_server"


---

Captain, just say “Deploy ZIP” and I’ll prepare this full repo package for you to download, or if you want I can help you customize or automate deployment next. Your call.

